<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Windows on Arto&#39;s dev time by-products</title>
    <link>https://artosalminen.github.io/series/windows/</link>
    <description>Recent content in Windows on Arto&#39;s dev time by-products</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://artosalminen.github.io/series/windows/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Download Streaming Video Using ffmpeg</title>
      <link>https://artosalminen.github.io/posts/how-to-download-streaming-video-with-ffmpeg/</link>
      <pubDate>Wed, 03 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://artosalminen.github.io/posts/how-to-download-streaming-video-with-ffmpeg/</guid>
      <description>&lt;h1 id=&#34;how-to-download-streaming-video-using-ffmpeg&#34;&gt;How to Download Streaming Video Using ffmpeg&lt;/h1&gt;
&lt;p&gt;Streaming video has become ubiquitous, but sometimes you might want to save a portion of a video for offline viewing or archival purposes. One powerful tool for this task is &lt;code&gt;ffmpeg&lt;/code&gt;, a versatile command-line program for handling multimedia data. In this guide, we&amp;rsquo;ll walk you through the process of installing &lt;code&gt;ffmpeg&lt;/code&gt; and using it to download streaming video.&lt;/p&gt;
&lt;h2 id=&#34;installing-ffmpeg&#34;&gt;Installing ffmpeg&lt;/h2&gt;
&lt;p&gt;Before you can use &lt;code&gt;ffmpeg&lt;/code&gt;, you need to install it on your system. One of the simplest ways to install &lt;code&gt;ffmpeg&lt;/code&gt; on Windows is via Chocolatey, a package manager for Windows. Follow these steps to install &lt;code&gt;ffmpeg&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to resolve Intel Graphics Command Center port conflict</title>
      <link>https://artosalminen.github.io/posts/how-to-resolve-intel-control-center-port-conflict/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://artosalminen.github.io/posts/how-to-resolve-intel-control-center-port-conflict/</guid>
      <description>&lt;p&gt;For developers working on .NET Core and other development servers, encountering port conflicts can be a common issue. Recently, I came accross with the default port (5000) used for local development server and the Intel(R) Graphics Command Center server. In this blog post, I&amp;rsquo;ll introduce a workaround that involves editing the Windows registry to resolve the conflict and ensure smooth development processes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Understanding the Issue:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The Intel(R) Graphics Command Center server, specifically the OneApp.IGCC.WinService.exe executable, by default, utilizes port 5000. However, this port is commonly used for development servers in the .NET Core ecosystem and other software development environments. When both the Intel(R) Graphics Command Center server and a development server attempt to bind to port 5000 simultaneously, a conflict arises.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
